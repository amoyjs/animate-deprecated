{"version":3,"file":"animate.es.js","sources":["../src/core/customEase.js","../src/core/animate.ts","../src/core/animations.ts","../src/core/LoadAnimation.ts","../src/core/query-animate.ts"],"sourcesContent":["/*!\n * VERSION: 0.2.2\n * DATE: 2018-08-27\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n *\n * @author: Jack Doyle, jack@greensock.com\n **/\n/* eslint-disable */\n\nimport { _gsScope, globals, Ease } from \"gsap/TweenLite.js\"\n\n_gsScope._gsDefine(\"easing.CustomEase\", [\"easing.Ease\"], function() {\n\n    const _numbersExp = /(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig\n    const _svgPathExp = /[achlmqstvz]|(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig\n    const _scientific = /[\\+\\-]?\\d*\\.?\\d+e[\\+\\-]?\\d+/ig\n    const _needsParsingExp = /[cLlsS]/g\n    const _bezierError = \"CustomEase only accepts Cubic Bezier data.\",\n    _bezierToPoints = function (x1, y1, x2, y2, x3, y3, x4, y4, threshold, points, index) {\n            var x12 = (x1 + x2) / 2,\n                y12 = (y1 + y2) / 2,\n                x23 = (x2 + x3) / 2,\n                y23 = (y2 + y3) / 2,\n                x34 = (x3 + x4) / 2,\n                y34 = (y3 + y4) / 2,\n                x123 = (x12 + x23) / 2,\n                y123 = (y12 + y23) / 2,\n                x234 = (x23 + x34) / 2,\n                y234 = (y23 + y34) / 2,\n                x1234 = (x123 + x234) / 2,\n                y1234 = (y123 + y234) / 2,\n                dx = x4 - x1,\n                dy = y4 - y1,\n                d2 = Math.abs((x2 - x4) * dy - (y2 - y4) * dx),\n                d3 = Math.abs((x3 - x4) * dy - (y3 - y4) * dx),\n                length\n            if (!points) {\n                points = [{ x: x1, y: y1 }, { x: x4, y: y4 }]\n                index = 1\n            }\n            points.splice(index || points.length - 1, 0, { x: x1234, y: y1234 })\n            if ((d2 + d3) * (d2 + d3) > threshold * (dx * dx + dy * dy)) {\n                length = points.length\n                _bezierToPoints(x1, y1, x12, y12, x123, y123, x1234, y1234, threshold, points, index)\n                _bezierToPoints(x1234, y1234, x234, y234, x34, y34, x4, y4, threshold, points, index + 1 + (points.length - length))\n            }\n            return points\n        },\n\n        _pathDataToBezier = function (d) {\n            var a = (d + \"\").replace(_scientific, function (m) {\n                var n = +m\n                return (n < 0.0001 && n > -0.0001) ? 0 : n\n            }).match(_svgPathExp) || [], //some authoring programs spit out very small numbers in scientific notation like \"1e-5\", so make sure we round that down to 0 first.\n                path = [],\n                relativeX = 0,\n                relativeY = 0,\n                elements = a.length,\n                l = 2,\n                i, x, y, command, isRelative, segment, startX, startY, prevCommand, difX, difY\n            for (i = 0; i < elements; i++) {\n                prevCommand = command\n                if (isNaN(a[i])) {\n                    command = a[i].toUpperCase()\n                    isRelative = (command !== a[i]) //lower case means relative\n                } else { //commands like \"C\" can be strung together without any new command characters between.\n                    i--\n                }\n                x = +a[i + 1]\n                y = +a[i + 2]\n                if (isRelative) {\n                    x += relativeX\n                    y += relativeY\n                }\n                if (!i) {\n                    startX = x\n                    startY = y\n                }\n                if (command === \"M\") {\n                    if (segment && segment.length < 8) { //if the path data was funky and just had a M with no actual drawing anywhere, skip it.\n                        path.length -= 1\n                        l = 0\n                    }\n                    relativeX = startX = x\n                    relativeY = startY = y\n                    segment = [x, y]\n                    l = 2\n                    path.push(segment)\n                    i += 2\n                    command = \"L\" //an \"M\" with more than 2 values gets interpreted as \"lineTo\" commands (\"L\").\n\n                } else if (command === \"C\") {\n                    if (!segment) {\n                        segment = [0, 0]\n                    }\n                    segment[l++] = x\n                    segment[l++] = y\n                    if (!isRelative) {\n                        relativeX = relativeY = 0\n                    }\n                    segment[l++] = relativeX + a[i + 3] * 1 //note: \"*1\" is just a fast/short way to cast the value as a Number. WAAAY faster in Chrome, slightly slower in Firefox.\n                    segment[l++] = relativeY + a[i + 4] * 1\n                    segment[l++] = relativeX = relativeX + a[i + 5] * 1\n                    segment[l++] = relativeY = relativeY + a[i + 6] * 1\n                    i += 6\n\n                } else if (command === \"S\") {\n                    if (prevCommand === \"C\" || prevCommand === \"S\") {\n                        difX = relativeX - segment[l - 4]\n                        difY = relativeY - segment[l - 3]\n                        segment[l++] = relativeX + difX\n                        segment[l++] = relativeY + difY\n                    } else {\n                        segment[l++] = relativeX\n                        segment[l++] = relativeY\n                    }\n                    segment[l++] = x\n                    segment[l++] = y\n                    if (!isRelative) {\n                        relativeX = relativeY = 0\n                    }\n                    segment[l++] = relativeX = relativeX + a[i + 3] * 1\n                    segment[l++] = relativeY = relativeY + a[i + 4] * 1\n                    i += 4\n\n                } else if (command === \"L\" || command === \"Z\") {\n                    if (command === \"Z\") {\n                        x = startX\n                        y = startY\n                        segment.closed = true\n                    }\n                    if (command === \"L\" || Math.abs(relativeX - x) > 0.5 || Math.abs(relativeY - y) > 0.5) {\n                        segment[l++] = relativeX + (x - relativeX) / 3\n                        segment[l++] = relativeY + (y - relativeY) / 3\n                        segment[l++] = relativeX + (x - relativeX) * 2 / 3\n                        segment[l++] = relativeY + (y - relativeY) * 2 / 3\n                        segment[l++] = x\n                        segment[l++] = y\n                        if (command === \"L\") {\n                            i += 2\n                        }\n                    }\n                    relativeX = x\n                    relativeY = y\n                } else {\n                    throw _bezierError\n                }\n\n            }\n            return path[0]\n        },\n\n        _findMinimum = function (values) {\n            var l = values.length,\n                min = 999999999999,\n                i\n            for (i = 1; i < l; i += 6) {\n                if (+values[i] < min) {\n                    min = +values[i]\n                }\n            }\n            return min\n        },\n\n        _normalize = function (values, height, originY) { //takes all the points and translates/scales them so that the x starts at 0 and ends at 1.\n            if (!originY && originY !== 0) {\n                originY = Math.max(+values[values.length - 1], +values[1])\n            }\n            var tx = +values[0] * -1,\n                ty = -originY,\n                l = values.length,\n                sx = 1 / (+values[l - 2] + tx),\n                sy = -height || ((Math.abs(+values[l - 1] - +values[1]) < 0.01 * (+values[l - 2] - +values[0])) ? _findMinimum(values) + ty : +values[l - 1] + ty),\n                i\n            if (sy) { //typically y ends at 1 (so that the end values are reached)\n                sy = 1 / sy\n            } else { //in case the ease returns to its beginning value, scale everything proportionally\n                sy = -sx\n            }\n            for (i = 0; i < l; i += 2) {\n                values[i] = (+values[i] + tx) * sx\n                values[i + 1] = (+values[i + 1] + ty) * sy\n            }\n        },\n\n        _getRatio = function (p) {\n            var point = this.lookup[(p * this.l) | 0] || this.lookup[this.l - 1]\n            if (point.nx < p) {\n                point = point.n\n            }\n            return point.y + ((p - point.x) / point.cx) * point.cy\n        },\n\n\n        CustomEase = function (id, data, config) {\n            this._calcEnd = true\n            this.id = id\n            if (id) {\n                Ease.map[id] = this\n            }\n            this.getRatio = _getRatio //speed optimization, faster lookups.\n            this.setData(data, config)\n        },\n        p = CustomEase.prototype = new Ease()\n\n    p.constructor = CustomEase\n\n    p.setData = function (data, config) {\n        data = data || \"0,0,1,1\"\n        var values = data.match(_numbersExp),\n            closest = 1,\n            points = [],\n            l, a1, a2, i, inc, j, point, prevPoint, p, precision\n        config = config || {}\n        precision = config.precision || 1\n        this.data = data\n        this.lookup = []\n        this.points = points\n        this.fast = (precision <= 1)\n        if (_needsParsingExp.test(data) || (data.indexOf(\"M\") !== -1 && data.indexOf(\"C\") === -1)) {\n            values = _pathDataToBezier(data)\n        }\n        l = values.length\n        if (l === 4) {\n            values.unshift(0, 0)\n            values.push(1, 1)\n            l = 8\n        } else if ((l - 2) % 6) {\n            throw _bezierError\n        }\n        if (+values[0] !== 0 || +values[l - 2] !== 1) {\n            _normalize(values, config.height, config.originY)\n        }\n\n        this.rawBezier = values\n\n        for (i = 2; i < l; i += 6) {\n            a1 = { x: +values[i - 2], y: +values[i - 1] }\n            a2 = { x: +values[i + 4], y: +values[i + 5] }\n            points.push(a1, a2)\n            _bezierToPoints(a1.x, a1.y, +values[i], +values[i + 1], +values[i + 2], +values[i + 3], a2.x, a2.y, 1 / (precision * 200000), points, points.length - 1)\n        }\n        l = points.length\n        for (i = 0; i < l; i++) {\n            point = points[i]\n            prevPoint = points[i - 1] || point\n            if (point.x > prevPoint.x || (prevPoint.y !== point.y && prevPoint.x === point.x) || point === prevPoint) { //if a point goes BACKWARD in time or is a duplicate, just drop it.\n                prevPoint.cx = point.x - prevPoint.x //change in x between this point and the next point (performance optimization)\n                prevPoint.cy = point.y - prevPoint.y\n                prevPoint.n = point\n                prevPoint.nx = point.x //next point's x value (performance optimization, making lookups faster in getRatio()). Remember, the lookup will always land on a spot where it's either this point or the very next one (never beyond that)\n                if (this.fast && i > 1 && Math.abs(prevPoint.cy / prevPoint.cx - points[i - 2].cy / points[i - 2].cx) > 2) { //if there's a sudden change in direction, prioritize accuracy over speed. Like a bounce ease - you don't want to risk the sampling chunks landing on each side of the bounce anchor and having it clipped off.\n                    this.fast = false\n                }\n                if (prevPoint.cx < closest) {\n                    if (!prevPoint.cx) {\n                        prevPoint.cx = 0.001 //avoids math problems in getRatio() (dividing by zero)\n                        if (i === l - 1) { //in case the final segment goes vertical RIGHT at the end, make sure we end at the end.\n                            prevPoint.x -= 0.001\n                            closest = Math.min(closest, 0.001)\n                            this.fast = false\n                        }\n                    } else {\n                        closest = prevPoint.cx\n                    }\n                }\n            } else {\n                points.splice(i--, 1)\n                l--\n            }\n        }\n        l = (1 / closest + 1) | 0\n        this.l = l //record for speed optimization\n        inc = 1 / l\n        j = 0\n        point = points[0]\n        if (this.fast) {\n            for (i = 0; i < l; i++) { //for fastest lookups, we just sample along the path at equal x (time) distance. Uses more memory and is slightly less accurate for anchors that don't land on the sampling points, but for the vast majority of eases it's excellent (and fast).\n                p = i * inc\n                if (point.nx < p) {\n                    point = points[++j]\n                }\n                a1 = point.y + ((p - point.x) / point.cx) * point.cy\n                this.lookup[i] = { x: p, cx: inc, y: a1, cy: 0, nx: 9 }\n                if (i) {\n                    this.lookup[i - 1].cy = a1 - this.lookup[i - 1].y\n                }\n            }\n            this.lookup[l - 1].cy = points[points.length - 1].y - a1\n        } else { //this option is more accurate, ensuring that EVERY anchor is hit perfectly. Clipping across a bounce, for example, would never happen.\n            for (i = 0; i < l; i++) { //build a lookup table based on the smallest distance so that we can instantly find the appropriate point (well, it'll either be that point or the very next one). We'll look up based on the linear progress. So it's it's 0.5 and the lookup table has 100 elements, it'd be like lookup[Math.floor(0.5 * 100)]\n                if (point.nx < i * inc) {\n                    point = points[++j]\n                }\n                this.lookup[i] = point\n            }\n\n            if (j < points.length - 1) {\n                this.lookup[i - 1] = points[points.length - 2]\n            }\n        }\n        this._calcEnd = (points[points.length - 1].y !== 1 || points[0].y !== 0) //ensures that we don't run into floating point errors. As long as we're starting at 0 and ending at 1, tell GSAP to skip the final calculation and use 0/1 as the factor.\n        return this\n    }\n\n    p.getRatio = _getRatio\n\n    p.getSVGData = function (config) {\n        return CustomEase.getSVGData(this, config)\n    }\n\n    CustomEase.create = function (id, data, config) {\n        return new CustomEase(id, data, config)\n    }\n\n    CustomEase.version = \"0.2.2\"\n\n    CustomEase.bezierToPoints = _bezierToPoints\n    CustomEase.get = function (id) {\n        return Ease.map[id]\n    }\n    CustomEase.getSVGData = function (ease, config) {\n        config = config || {}\n        var rnd = 1000,\n            width = config.width || 100,\n            height = config.height || 100,\n            x = config.x || 0,\n            y = (config.y || 0) + height,\n            e = config.path,\n            a, slope, i, inc, tx, ty, precision, threshold, prevX, prevY\n        if (config.invert) {\n            height = -height\n            y = 0\n        }\n        ease = ease.getRatio ? ease : Ease.map[ease] || console.log(\"No ease found: \", ease)\n        if (!ease.rawBezier) {\n            a = [\"M\" + x + \",\" + y]\n            precision = Math.max(5, (config.precision || 1) * 200)\n            inc = 1 / precision\n            precision += 2\n            threshold = 5 / precision\n            prevX = (((x + inc * width) * rnd) | 0) / rnd\n            prevY = (((y + ease.getRatio(inc) * -height) * rnd) | 0) / rnd\n            slope = (prevY - y) / (prevX - x)\n            for (i = 2; i < precision; i++) {\n                tx = (((x + i * inc * width) * rnd) | 0) / rnd\n                ty = (((y + ease.getRatio(i * inc) * -height) * rnd) | 0) / rnd\n                if (Math.abs((ty - prevY) / (tx - prevX) - slope) > threshold || i === precision - 1) { //only add points when the slope changes beyond the threshold\n                    a.push(prevX + \",\" + prevY)\n                    slope = (ty - prevY) / (tx - prevX)\n                }\n                prevX = tx\n                prevY = ty\n            }\n        } else {\n            a = []\n            precision = ease.rawBezier.length\n            for (i = 0; i < precision; i += 2) {\n                a.push((((x + ease.rawBezier[i] * width) * rnd) | 0) / rnd + \",\" + (((y + ease.rawBezier[i + 1] * -height) * rnd) | 0) / rnd)\n            }\n            a[0] = \"M\" + a[0]\n            a[1] = \"C\" + a[1]\n        }\n        if (e) {\n            (typeof (e) === \"string\" ? document.querySelector(e) : e).setAttribute(\"d\", a.join(\" \"))\n        }\n        return a.join(\" \")\n    }\n\n    return CustomEase\n\n}, true)\n\nexport var CustomEase = globals.CustomEase\nexport { CustomEase as default }","import * as PIXI from 'pixi.js'\nimport { AnimateOptions } from '../types'\n// @ts-ignore\nimport { TweenLite } from 'gsap'\n// @ts-ignore\nimport PixiPlugin from 'gsap/PixiPlugin'\n\nPixiPlugin.registerPIXI(PIXI)\n\nfunction animation(target: any, options: any) {\n    const {\n        to = {},\n        from = {},\n        ease,\n        delay = 0,\n        duration = 1000,\n        repeat = 0,\n        onStart = () => { },\n        onUpdate = () => { },\n        onComplete = () => { },\n        onReverseComplete = () => { },\n        ...rest\n    } = options\n    let count = 1\n    const action = Object.keys(to).length > 0 ? 'to' : (Object.keys(from).length > 0 ? 'from' : 'to')\n    const props = action === 'to' ? to : from\n    const animate = TweenLite[action](target, duration / 1000, {\n        pixi: {\n            ...rest,\n            ...props,\n        },\n        onStart() {\n            onStart(animate)\n        },\n        onComplete() {\n            onComplete(animate)\n            if (repeat === 'infinite' || count < repeat) {\n                count++\n            }\n        },\n        onUpdate() {\n            const progress = (animate.progress() * 100).toFixed(2)\n            onUpdate(progress, animate)\n        },\n        onReverseComplete() {\n            if (repeat === 'infinite' || count < repeat) {\n                animate.restart()\n                count++\n            }\n            onReverseComplete(animate)\n        },\n    })\n}\n\n/**\n * animate\n * \n * @param target - Animation target\n * @param { AnimateOptions } options - Animation options\n */\nexport function animate(target: any, options: AnimateOptions) {\n    animation(target, options)\n}","// @ts-ignore\nimport { TimelineLite, Linear, Power0, Bounce, Elastic } from 'gsap'\nimport CustomEase from './customEase'\nimport { animate } from './animate'\n\nconst tl = new TimelineLite()\n\n/**\n * moveTo\n * \n * @param { Object } target - target\n * @param { Number } x - coordinate x\n * @param { Number } y - coordinate y\n * @param { Number } duration - animation duration\n * @param { String } ease - animation timing function\n */\nexport function moveTo(target: any, x: any, y: any, duration: number, ease: any) {\n    const position = {\n        x: 0,\n        y: 0,\n    }\n    if (typeof x === 'number' && typeof y === 'number') {\n        position.x = x\n        position.y = y\n    }\n    if (typeof x === 'object') {\n        position.x = x.x\n        position.y = x.y\n        duration = y\n        ease = duration\n    }\n\n    animate(target, {\n        x: position.x,\n        y: position.y,\n        ease,\n        duration,\n    })\n}\n\n/**\n * blink\n * \n * @param { Object } target - target\n * @param { Number } duration - animation duration\n * @param { Boolean } repeat - animation repeat times\n */\nexport function blink(target: any, duration: number, repeat: number) {\n    let totalRepeat = 0\n    repeatBlink()\n    return tl\n\n    function repeatBlink() {\n        if (totalRepeat < repeat) {\n            duration = duration / 1000 / repeat / 2\n            tl.to(target, duration, {\n                alpha: 0,\n                onComplete: () => {\n                    tl.to(target, duration / 1000 / repeat / 2, {\n                        alpha: 1,\n                        onComplete: repeatBlink,\n                    })\n                    totalRepeat++\n                }\n            })\n        }\n    }\n}\n\n/**\n * shakeInAlarm\n * \n * @param { Object } target - target\n * \n * @description - ['shakeInHorz', 'shakeInVetc', 'shakeInRotate', 'shakeInHard'] also except a param `target`\n */\nexport function shakeInAlarm(target: any) {\n    const animations = [{\n        duration: 0.01,\n        vars: {\n            pixi: {\n                rotation: 5,\n                x: '+=10',\n            },\n            ease: Linear.easeNone,\n        },\n    }, {\n        duration: 0.01,\n        vars: {\n            pixi: {\n                rotation: -5,\n                x: '-=20',\n            },\n            ease: Linear.easeNone,\n        },\n    }]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n    tl.eventCallback('onComplete', () => { tl.reverse() })\n    tl.eventCallback('onReverseComplete', () => { tl.restart() })\n}\n\nexport function shakeInHorz(target: any) {\n    const animations = [{\n        duration: 0.01,\n        vars: {\n            pixi: {\n                x: '+=10',\n            },\n            ease: Linear.easeNone,\n        },\n    }, {\n        duration: 0.01,\n        vars: {\n            pixi: {\n                x: '-=20',\n            },\n            ease: Linear.easeNone,\n        },\n    }]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n    tl.eventCallback('onComplete', () => { tl.reverse() })\n    tl.eventCallback('onReverseComplete', () => { tl.restart() })\n}\n\nexport function shakeInVetc(target: any) {\n    const animations = [{\n        target: target,\n        duration: 0.01,\n        vars: {\n            pixi: {\n                y: '+=10',\n            },\n            ease: Linear.easeNone,\n        },\n    }, {\n        target: target,\n        duration: 0.01,\n        vars: {\n            pixi: {\n                y: '-=20',\n            },\n            ease: Linear.easeNone,\n        },\n    }]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n    tl.eventCallback('onComplete', () => { tl.reverse() })\n    tl.eventCallback('onReverseComplete', () => { tl.restart() })\n}\n\nexport function shakeInRotate(target: any) {\n    const animations = [\n        {\n            target: target,\n            duration: 0.01,\n            vars: {\n                pixi: {\n                    rotation: 10,\n                },\n                ease: Linear.easeNone,\n            },\n        },\n        {\n            target: target,\n            duration: 0.01,\n            vars: {\n                pixi: {\n                    rotation: -10,\n                },\n                ease: Linear.easeNone,\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n    tl.eventCallback('onComplete', () => { tl.reverse() })\n    tl.eventCallback('onReverseComplete', () => { tl.restart() })\n}\n\nexport function shakeInHard(target: any) {\n    const aniArray = [\n        {\n            x: '-=7',\n            y: '+=5',\n            rotation: 1.5 * Math.PI / 180,\n            ease: Linear.easeIn,\n        }, {\n            x: '+=5',\n            y: '-=5',\n            rotation: 1.5 * Math.PI / 180,\n            ease: Linear.easeIn,\n        }, {\n            x: '-=2',\n            y: '+=8',\n            rotation: 1.5 * Math.PI / 180,\n            ease: Linear.easeIn,\n        }, {\n            x: '-=7',\n            y: '+=1',\n            rotation: -(2.5 * Math.PI / 180),\n            ease: Linear.easeIn,\n        }, {\n            x: '-=2',\n            y: '+=8',\n            rotation: 3.5 * Math.PI / 180,\n            ease: Linear.easeIn,\n        }, {\n            x: '-=3',\n            y: '-=8',\n            rotation: -(1.5 * Math.PI / 180),\n            ease: Linear.easeIn,\n        }, {\n            x: '-=8',\n            y: '-=7',\n            rotation: 2.5 * Math.PI / 180,\n            ease: Linear.easeIn,\n        }, {\n            x: '+=0',\n            y: '+=1',\n            rotation: 0.5 * Math.PI / 180,\n            ease: Linear.easeIn,\n        }, {\n            x: '-=2',\n            y: '-=1',\n            rotation: -(1.5 * Math.PI / 180),\n            ease: Linear.easeIn,\n        }, {\n            x: '+=7',\n            y: '+=0',\n            rotation: -(2.5 * Math.PI / 180),\n            ease: Linear.easeIn,\n        }, {\n            x: '+=8',\n            y: '-=6',\n            rotation: -(1.5 * Math.PI / 180),\n            ease: Linear.easeIn,\n        }, {\n            x: '+=1',\n            y: '-=4',\n            rotation: -(0.5 * Math.PI / 180),\n            ease: Linear.easeIn,\n        }, {\n            x: '-=2',\n            y: '+=9',\n            rotation: 3.5 * Math.PI / 180,\n            ease: Linear.easeIn,\n        }, {\n            x: '+=1',\n            y: '-=5',\n            rotation: -(1.5 * Math.PI / 180),\n            ease: Linear.easeIn,\n        }, {\n            x: '-=2',\n            y: '+=7',\n            rotation: 0.5 * Math.PI / 180,\n            ease: Linear.easeIn,\n        },\n    ]\n    aniArray.map((animation) => {\n        tl.to(target, 0.02, animation)\n    })\n\n    tl.eventCallback('onComplete', () => { tl.reverse() })\n    tl.eventCallback('onReverseComplete', () => { tl.restart() })\n}\n\n/**\n *\n * @param { Object } target - target\n * @param { Number } duration - animation duration\n *\n * @description - ['freeFall', 'elasticScale', 'elasticMove',\n * 'spiralRotateIn', 'wheelRotateIn', 'topShockIn', 'breakIn',\n * 'swashOut', 'foolishIn', 'hingeOut', 'heartBeat', 'jelly',\n * 'swing1', 'swing2', 'swing3', 'swing4']\n * also except params `target`, `duration`\n */\nexport function bomb1(target: any, duration: number = 1000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 1 * duration,\n            vars: {\n                pixi: {\n                    scale: 2 * this.ratio,\n                    blur: 20,\n                    alpha: 0,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.25,0.1 0.25,1 1,1'),\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n    tl.eventCallback('onComplete', () => {\n        tl.reverse()\n    })\n}\n\nexport function freeFall(target: any, duration: number = 1000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.01,\n            vars: {\n                pixi: {\n                    y: '-= 300',\n                },\n            },\n        },\n        {\n            target: target,\n            duration: 1 * duration,\n            vars: {\n                pixi: {\n                    y: '+= 300',\n                },\n                ease: Bounce.easeOut,\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n}\n\nexport function elasticScale(target: any, duration: number = 1000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.01 * duration,\n            vars: {\n                pixi: {\n                    scale: 0,\n                },\n                ease: Power0.easeNone,\n            },\n        },\n        {\n            target: target,\n            duration: 0.25 * duration,\n            vars: {\n                pixi: {\n                    scale: 1 * this.ratio,\n                },\n                ease: Power0.easeNone,\n            },\n        },\n        {\n            target: target,\n            duration: 0.15 * duration,\n            vars: {\n                pixi: {\n                    scale: 0.9 * this.ratio,\n                },\n                ease: Power0.easeNone,\n            },\n        },\n        {\n            target: target,\n            duration: 0.15 * duration,\n            vars: {\n                pixi: {\n                    scale: 1 * this.ratio,\n                },\n                ease: Power0.easeNone,\n            },\n        },\n        {\n            target: target,\n            duration: 0.15 * duration,\n            vars: {\n                pixi: {\n                    scale: 0.9 * this.ratio,\n                },\n                ease: Power0.easeNone,\n            },\n        },\n        {\n            target: target,\n            duration: 0.3 * duration,\n            vars: {\n                pixi: {\n                    scale: 1 * this.ratio,\n                },\n                ease: Power0.easeNone,\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n}\n\nexport function elasticMove(target: any, duration: number = 1000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.01 * duration,\n            vars: {\n                pixi: {\n                    y: '-= 300',\n                },\n            },\n        },\n        {\n            target: target,\n            duration: 1 * duration,\n            vars: {\n                pixi: {\n                    y: '+= 300',\n                },\n                ease: Elastic.easeOut.config(0.4, 0.3),\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n}\n\nexport function spiralRotateIn(target: any, duration: number = 1000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.01,\n            vars: {\n                pixi: {\n                    alpha: 0,\n                    anchorX: 0,\n                    anchorY: 1,\n                    scale: 0,\n                    rotation: 360,\n                    y: '+=' + ((target.height)),\n                },\n                ease: Linear.easeNone,\n            },\n        },\n        {\n            target: target,\n            duration: 0.3 * duration,\n            vars: {\n                pixi: {\n                    alpha: 0,\n                    // anchorX: 0,\n                    // anchorY: 1,\n                    rotation: 360,\n                    // rotate:  360,\n                    //  y: '+=' + ((sprite.height)),\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.25,0.1 0.25,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.7 * duration,\n            vars: {\n                pixi: {\n                    alpha: 1,\n                    anchorX: 1,\n                    anchorY: 1,\n                    scale: 1,\n                    rotation: 0,\n                    y: '-=' + ((target.height) / 2),\n                    x: '+=' + ((target.width) / 2),\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.25,0.1 0.25,1 1,1'),\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n    tl.eventCallback('onComplete', () => {\n        target.anchor.set(0.5, 0.5)\n        target.x -= target.width / 2\n        target.y -= target.height / 2\n        tl.eventCallback('onComplete', () => { })\n    })\n}\n\nexport function wheelRotateIn(target: any, duration: number = 1000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.01,\n            vars: {\n                pixi: {\n                    alpha: 0,\n                    rotation: 360,\n                    x: '+=200',\n                },\n                ease: Power0.easeNone,\n            },\n        },\n        {\n            target: target,\n            duration: 0.5 * duration,\n            vars: {\n                pixi: {\n                    alpha: 1,\n                    rotation: -20,\n                    x: '-=220',\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.25,0.1 0.25,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.5 * duration,\n            vars: {\n                pixi: {\n                    alpha: 1,\n                    rotation: 0,\n                    x: '+=20',\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.25,0.1 0.25,1 1,1'),\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n}\n\nexport function topShockIn(target: any, duration: number = 1000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.01,\n            vars: {\n                pixi: {\n                    alpha: 0,\n                    scale: 0.1 * this.ratio,\n                    y: '-=220',\n                },\n\n            },\n        },\n        {\n            target: target,\n            duration: 0.2,\n            vars: {\n                pixi: {\n                    alpha: 1,\n                    scale: 0.2 * this.ratio,\n                    y: '-=30',\n                },\n                ease: Power0.easeNone,\n            },\n        },\n        {\n            target: target,\n            duration: 0.4 * duration,\n            vars: {\n                pixi: {\n                    alpha: 1,\n                    scale: 0.675 * this.ratio,\n                    y: '+=310',\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.55,0.055 0.675,0.19 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.4 * duration,\n            vars: {\n                pixi: {\n                    alpha: 1,\n                    scale: 1 * this.ratio,\n                    y: '-=60',\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.175,0.885 0.32,1 1,1'),\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n}\n\nexport function breakIn(target: any, duration: number = 1000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    // sprite.anchor.set(0, 1)\n    // sprite.x -= sprite.width / 2\n    // sprite.y += sprite.height / 2\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.01,\n            vars: {\n                pixi: {\n                    anchorX: 0,\n                    anchorY: 1,\n                    x: '-=' + (target.width / 2),\n                    y: '+=' + (target.height / 2),\n                },\n\n            },\n        },\n        {\n            target: target,\n            duration: 0.01 * duration,\n            vars: {\n                pixi: {\n                    alpha: 1,\n                    x: '+=300',\n                    skewX: 30,\n                },\n\n            },\n        },\n        {\n            target: target,\n            duration: 0.3 * duration,\n            vars: {\n                pixi: {\n                    alpha: 1,\n                    skewX: 8,\n                    x: '-=300',\n                },\n                ease: Power0.easeNone,\n            },\n        },\n        {\n            target: target,\n            duration: 0.2 * duration,\n            vars: {\n                pixi: {\n                    skewX: -3,\n                },\n                ease: Power0.easeNone,\n            },\n        },\n        {\n            target: target,\n            duration: 0.2 * duration,\n            vars: {\n                pixi: {\n                    skewX: 1,\n                },\n                ease: Power0.easeNone,\n            },\n        },\n        {\n            target: target,\n            duration: 0.3 * duration,\n            vars: {\n                pixi: {\n                    skewX: 0,\n                },\n                ease: Power0.easeNone,\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n    tl.eventCallback('onComplete', () => {\n        target.anchor.set(0.5, 0.5)\n        target.x += target.width / 2\n        target.y -= target.height / 2\n        tl.eventCallback('onComplete', () => { })\n    })\n}\n\nexport function swashOut(target: any, duration: number = 1000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.8 * duration,\n            vars: {\n                pixi: {\n                    scale: 0.8 * this.ratio,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.25,0.1 0.25,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.2 * duration,\n            vars: {\n                pixi: {\n                    alpha: 0,\n                    scale: 0,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.25,0.1 0.25,1 1,1'),\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n}\n\nexport function foolishIn(target: any, duration: number = 1000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.01,\n            vars: {\n                pixi: {\n                    alpha: 0,\n                    scale: 0,\n                    rotation: 360,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.25,0.1 0.25,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.2 * duration,\n            vars: {\n                pixi: {\n                    alpha: 1,\n                    anchorX: 0,\n                    anchorY: 1,\n                    scale: 0.5 * this.ratio,\n                    rotation: 0,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.25,0.1 0.25,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.2 * duration,\n            vars: {\n                pixi: {\n                    alpha: 1,\n                    anchorX: 1,\n                    anchorY: 1,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.25,0.1 0.25,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.2 * duration,\n            vars: {\n                pixi: {\n                    alpha: 1,\n                    anchorX: 0,\n                    anchorY: 1,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.25,0.1 0.25,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.2 * duration,\n            vars: {\n                pixi: {\n                    alpha: 1,\n                    anchorX: 0,\n                    anchorY: 0,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.25,0.1 0.25,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.2 * duration,\n            vars: {\n                pixi: {\n                    alpha: 1,\n                    anchorX: 0.5,\n                    anchorY: 0.5,\n                    scale: 1 * this.ratio,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.25,0.1 0.25,1 1,1'),\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n}\n\nexport function hingeOut(target: any, duration: number = 1000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    // sprite.anchor.set(0, 0)\n    // sprite.x -= sprite.width / 2\n    // sprite.y -= sprite.height / 2\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.01,\n            vars: {\n                pixi: {\n                    anchorX: 0,\n                    anchorY: 0,\n                    x: '-=' + (target.width / 2),\n                    y: '-=' + (target.height / 2),\n                },\n            },\n        },\n        {\n            target: target,\n            duration: 0.2 * duration,\n            vars: {\n                pixi: {\n                    rotation: 70,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.2 * duration,\n            vars: {\n                pixi: {\n                    rotation: '-=40',\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.2 * duration,\n            vars: {\n                pixi: {\n                    rotation: '+=20',\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.2 * duration,\n            vars: {\n                pixi: {\n                    rotation: '-=15',\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.2 * duration,\n            vars: {\n                pixi: {\n                    y: '+=300',\n                    alpha: 0,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n\n    tl.eventCallback('onComplete', () => {\n        target.anchor.set(0.5, 0.5)\n        target.x += target.width / 2\n        target.y += target.height / 2\n        tl.eventCallback('onComplete', () => { })\n    })\n}\n\nexport function heartBeat(target: any, duration: number = 1000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.15 * duration,\n            vars: {\n                pixi: {\n                    scale: 1.3 * this.ratio,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.15 * duration,\n            vars: {\n                pixi: {\n                    scale: 1 * this.ratio,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.15 * duration,\n            vars: {\n                pixi: {\n                    scale: 1.3 * this.ratio,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.15 * duration,\n            vars: {\n                pixi: {\n                    scale: 1 * this.ratio,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n}\n\nexport function jelly(target: any, duration: number = 2000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.15 * duration,\n            vars: {\n                pixi: {\n                    scaleX: 1.25 * this.ratio,\n                    scaleY: 0.75 * this.ratio,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.05 * duration,\n            vars: {\n                pixi: {\n                    scaleX: 0.75 * this.ratio,\n                    scaleY: 1.25 * this.ratio,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.05 * duration,\n            vars: {\n                pixi: {\n                    scaleX: 1.15 * this.ratio,\n                    scaleY: 0.85 * this.ratio,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.075 * duration,\n            vars: {\n                pixi: {\n                    scaleX: 0.95 * this.ratio,\n                    scaleY: 1.05 * this.ratio,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.05 * duration,\n            vars: {\n                pixi: {\n                    scaleX: 1.05 * this.ratio,\n                    scaleY: 0.95 * this.ratio,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.125 * duration,\n            vars: {\n                pixi: {\n                    scaleX: 1 * this.ratio,\n                    scaleY: 1 * this.ratio,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n}\n\nexport function swing1(target: any, duration: number = 2000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.01,\n            vars: {\n                pixi: {\n                    rotation: -30,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.5 * duration,\n            vars: {\n                pixi: {\n                    rotation: 30,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.5 * duration,\n            vars: {\n                pixi: {\n                    rotation: -30,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n    ]\n    target.anchor.set(0.5, -3)\n    target.y -= target.height * 3.5\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n    tl.eventCallback('onComplete', () => { tl.reverse() })\n    tl.eventCallback('onReverseComplete', () => { tl.restart() })\n}\n\nexport function swing2(target: any, duration: number = 2000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.3 * duration,\n            vars: {\n                pixi: {\n                    rotation: 15,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.1 * duration,\n            vars: {\n                pixi: {\n                    rotation: -10,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.1 * duration,\n            vars: {\n                pixi: {\n                    rotation: 5,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.1 * duration,\n            vars: {\n                pixi: {\n                    rotation: -2,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.1 * duration,\n            vars: {\n                pixi: {\n                    rotation: 0,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n\n    ]\n    target.anchor.set(0.5, 0)\n    target.y -= target.height / 2\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n\n    tl.eventCallback('onComplete', () => {\n        target.anchor.set(0.5, 0.5)\n        target.y += target.height / 2\n        tl.eventCallback('onComplete', () => { })\n    })\n}\n\nexport function swing3(target: any, duration: number = 2000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.075 * duration,\n            vars: {\n                pixi: {\n                    rotation: -5,\n                    x: '-=25',\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.075 * duration,\n            vars: {\n                pixi: {\n                    rotation: 3,\n                    x: '+=45',\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.075 * duration,\n            vars: {\n                pixi: {\n                    rotation: -3,\n                    x: '-=35',\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.075 * duration,\n            vars: {\n                pixi: {\n                    rotation: 2,\n                    x: '+=25',\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.075 * duration,\n            vars: {\n                pixi: {\n                    rotation: -1,\n                    x: '-=15',\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.075 * duration,\n            vars: {\n                pixi: {\n                    rotation: 0,\n                    x: '+=5',\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n}\n\nexport function swing4(target: any, duration: number = 2000) {\n    if (typeof duration !== 'number') {\n        throw new Error('animation time must be a number!')\n    }\n    duration = duration / 1000\n    const animations = [\n        {\n            target: target,\n            duration: 0.05 * duration,\n            vars: {\n                pixi: {\n                    scale: 0.8 * this.ratio,\n                    rotation: -5,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.1 * duration,\n            vars: {\n                pixi: {\n                    scale: 1.1 * this.ratio,\n                    rotation: 3,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.05 * duration,\n            vars: {\n                pixi: {\n                    scale: 1.1 * this.ratio,\n                    rotation: -3,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.05 * duration,\n            vars: {\n                pixi: {\n                    scale: 1.1 * this.ratio,\n                    rotation: 3,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.05 * duration,\n            vars: {\n                pixi: {\n                    scale: 1.1 * this.ratio,\n                    rotation: -3,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.05 * duration,\n            vars: {\n                pixi: {\n                    scale: 1.1 * this.ratio,\n                    rotation: 3,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.05 * duration,\n            vars: {\n                pixi: {\n                    scale: 1.1 * this.ratio,\n                    rotation: -3,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.05 * duration,\n            vars: {\n                pixi: {\n                    scale: 1.1 * this.ratio,\n                    rotation: 3,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n        {\n            target: target,\n            duration: 0.05 * duration,\n            vars: {\n                pixi: {\n                    scale: 1 * this.ratio,\n                    rotation: 0,\n                },\n                ease: CustomEase.create('custom', 'M0,0 C0.42,0 0.58,1 1,1'),\n            },\n        },\n    ]\n    animations.map((animation) => tl.to(target, animation.duration, animation.vars))\n}","import * as PIXI from 'pixi.js'\n// @ts-ignore\nimport { TimelineLite } from 'gsap'\nimport { CustomEase } from './customEase'\nimport 'gsap/PixiPlugin'\ndeclare var PixiPlugin: any\nPixiPlugin.registerPIXI(PIXI)\n\nclass AniController {\n\n    private lastTimeLine: any = null\n    private loadedCb: () => void \n    private completeCb: () => void \n    private reverseCompleteCb: () => void \n    private aniController: {\n                position: any, scaleX: any, scaleY: any, rotation: any, opacity: any, anchor: any\n            } = {position: null, scaleX: null, scaleY: null, rotation: null, opacity: null, anchor: null}\n    private aniData: {\n                position: any, scaleX: any, scaleY: any, rotation: any, opacity: any, anchor: any\n            } = {position: null, scaleX: null, scaleY: null, rotation: null, opacity: null, anchor: null}    \n\n    constructor(sprite: any, file: string) {\n        const xRatio = 1 / 1.92\n        const yRatio = window.innerHeight / 750\n        const sWidth = sprite.width / xRatio\n        const sHeight = sprite.height / xRatio\n        \n        const rawFile = new XMLHttpRequest()\n        // 读取json文件\n        const readFileCallBack = (response: any): any => {\n            const ani = JSON.parse(response)\n            const totalFrame = ani.op - ani.ip\n            const duratuion = totalFrame / ani.fr\n\n            if (ani.layers) {\n                ani.layers.map((layer: any) => {\n                    // get position data\n                    if (layer.ks && layer.ks.p) {\n                        const posAni = this.animatePosition(sprite, layer.ks.p, totalFrame, duratuion)\n                        const tl_pos = new TimelineLite()\n                        posAni.map((ani) => {\n                            tl_pos.to(sprite, duratuion * ani.t, ani)\n                        })\n                        this.setPosition(tl_pos)\n                        this.setPositionData(posAni)\n                    }\n\n                    // get scale data\n                    // every dimension has it's own scale and ease cruve\n                    if (layer.ks && layer.ks.s) {\n                        const scaleAni = this.animationScale(sprite, layer.ks.s, totalFrame, duratuion)\n                        const tl_scale_x = new TimelineLite()\n                        const tl_scale_y = new TimelineLite()\n\n                        scaleAni.x.map((ani: any) => {\n                            tl_scale_x.to(sprite.scale, duratuion * ani.t, ani)\n\n                        })\n                        scaleAni.y.map((ani: any) => {\n                            tl_scale_y.to(sprite.scale, duratuion * ani.t, ani)\n                        })\n                        this.setScaleX(tl_scale_x)\n                        this.setScaleXData(scaleAni.x)\n\n                        this.setScaleY(tl_scale_y)\n                        this.setScaleYData(scaleAni.y)\n                    }\n\n                    // get rotation data\n                    if (layer.ks && layer.ks.r) {\n                        const rotationAni = this.animationRotation(sprite, layer.ks.r, totalFrame, duratuion)\n                        const tl_rotation = new TimelineLite()\n                        rotationAni.map((ani: any) => {\n                            tl_rotation.to(sprite, duratuion * ani.t, ani)\n                        })\n                        this.setRotation(tl_rotation)\n                        this.setRotationData(rotationAni)\n                    }\n\n                    // get alpha data\n                    if (layer.ks && layer.ks.o) {\n                        const opacityAni = this.animationOpacity(sprite, layer.ks.o, totalFrame, duratuion)\n                        const tl_opacity = new TimelineLite()\n                        opacityAni.map((ani) => {\n                            tl_opacity.to(sprite, duratuion * ani.t, ani)\n                        })\n                        this.setOpacity(tl_opacity)\n                        this.setOpacityData(opacityAni)\n                    }\n\n                    // get the anchor data \n                    if (layer.ks && layer.ks.a) {\n                        const anchorAni = this.animationAnchor(sprite, layer.ks.a, totalFrame, duratuion)\n                        const tl_anchor = new TimelineLite()\n                        let delay = 0\n                        anchorAni.map( (curve, index) => {\n                            delay = index === 0 ? curve.delay :\n                                                (anchorAni[index - 1].delay - curve.delay) \n                            // delay += index === 0 ? curve.delay * 1000 : \n                            //                     (anchorAni[index - 1].delay - curve.delay) * 1000\n                            let frameCount = 0;                \n                            curve.bezier.points.map( (data: any, dataIndex: number) => {\n                                const anchorX = (data.point[0] ) / sWidth\n                                const anchorY = (data.point[1] ) / sHeight\n                                const startAnchorX = frameCount === 0 ? 0.5 : curve.bezier.points[dataIndex - 1].point[0] / sWidth\n                                const startAnchorY = frameCount === 0 ? 0.5 : curve.bezier.points[dataIndex - 1].point[1] / sHeight\n                                const anchorDiffX = anchorX - startAnchorX\n                                const anchorDiffY = anchorY - startAnchorY\n                                \n                                tl_anchor.to(sprite, 1 / 60, {\n                                    pixi: {\n                                        anchorX,\n                                        anchorY,\n                                        // x: (anchorDiffX < 0?'+=':'-=') + Math.abs(anchorDiffX * sWidth),\n                                        // y: (anchorDiffY < 0?'+=':'-=') + Math.abs(anchorDiffY * sHeight),\n                                    }, \n                                    delay: dataIndex === 0 ? delay: 0\n                                })\n                            \n                                // setTimeout( () => {\n                                //     // 变动anchor 的同时要计算位移动\n                                //     const anchorX = (data.point[0] ) / sWidth\n                                //     const anchorY = (data.point[1] ) / sHeight\n                                //     const startAnchorX = frameCount === 0 ? 0.5 : curve.bezier.points[dataIndex - 1].point[0] / sWidth\n                                //     const startAnchorY = frameCount === 0 ? 0.5 : curve.bezier.points[dataIndex - 1].point[1] / sHeight\n                                //     const anchorDiffX = anchorX - startAnchorX\n                                //     const anchorDiffY = anchorY - startAnchorY\n                                //     sprite.anchor.set( (data.point[0] ) / sWidth,\n                                //                        (data.point[1] ) / sHeight,\n                                //                      )\n                                //     console.log('x: '+ anchorX, 'y'+ anchorX, \n                                //                 'xStart: '+ startAnchorX, 'yStart '+ startAnchorY,\n                                //                 'xDiff: '+ anchorDiffX,'yDiff' +anchorDiffY,\n\n                                //                 )\n                                //     sprite.x += - (anchorDiffX * sWidth)\n                                //     sprite.y += - (anchorDiffY * sHeight)\n\n                                // }, delay)\n                                // delay += (1 / 60) * 1000\n                                frameCount++\n                            })\n                        })\n                        this.setAnchor(tl_anchor)\n                        this.setAnchorData(anchorAni)\n                    }\n                    // set lastFrame timeline\n                    this.setLastFrameTimeline()\n                    // trigger registered event callback\n                    this.triggerReisteredCallback()\n                })\n            }\n        }\n        rawFile.overrideMimeType(\"application/json\")\n        rawFile.open(\"GET\", file, true)\n        rawFile.onreadystatechange = () => {\n            if (rawFile.readyState === 4 && rawFile.status === 200) {\n                readFileCallBack(rawFile.response)\n            }\n        }\n        rawFile.send(null)\n    }\n\n    private buildPath(t: any, e: any, r: any, i: any, frames: number) {\n        const s = (t[0] + \"_\" + t[1] + \"_\" + e[0] + \"_\" + e[1] + \"_\" + r[0] + \"_\" + r[1] + \"_\" + i[0] + \"_\" + i[1]).replace(/\\./g, \"p\")\n\n        let a: any\n        let n: any\n        let o: any\n        let h: any\n        let l: any\n        let p: any\n        let m: any\n        let f = frames\n        let c = 0\n        let d = null\n        2 === t.length && (t[0] !== e[0] || t[1] !== e[1]) && this.y(t[0], t[1], e[0], e[1], t[0] + r[0], t[1] + r[1]) && this.y(t[0], t[1], e[0], e[1], e[0] + i[0], e[1] + i[1]) && (f = 2)\n        const u = {\n            segmentLength: 0,\n            points: new Array(t),\n        }\n        for (o = r.length, a = 0; a < f; a += 1) {\n            const timeSegmentx = this.getBezierCruveTimex(a / (f - 1))\n            const timeSegmenty = this.getBezierCruveTimey(a / (f - 1))\n            const totalLength = Math.sqrt(Math.pow((888 - 206), 2) + Math.pow((878 - 120), 2))\n            const currentLength = Math.sqrt(Math.pow((timeSegmenty - 206), 2) + Math.pow((timeSegmentx - 120), 2))\n\n            // l = (timeSegmenty - 206) / ( 888 - 206)\n            l = (a / (f - 1))\n            for (m = this.createSizedArray(o), n = p = 0; n < o; n += 1) {\n                h = Math.pow(1 - l, 3) * t[n] + 3 * Math.pow(1 - l, 2) * l * (t[n] + r[n]) + 3 * (1 - l) * Math.pow(l, 2) * (e[n] + i[n]) + Math.pow(l, 3) * e[n]\n                m[n] = h\n                null !== d && (p += Math.pow(m[n] - d[n], 2))\n            }\n            c += p = Math.sqrt(p)\n            const obj = {\n                partialLength: p,\n                point: m,\n            }\n            u.points[a] = {\n                partialLength: p,\n                point: m,\n            }\n\n            d = m\n        }\n        u.segmentLength = c\n        const test = u\n        return test\n    }\n\n    private getBezierCruveTimex(time: any) {\n        const timeSegment = Math.pow(1 - time, 3) * 120 + 3 * Math.pow(1 - time, 2) * time * (120) + 3 * (1 - time) * Math.pow(time, 2) * (127) + Math.pow(time, 3) * 828\n        return timeSegment\n    }\n\n    private getBezierCruveTimey(time: any) {\n        const timeSegment = Math.pow(1 - time, 3) * 206 + 3 * Math.pow(1 - time, 2) * time * (888) + 3 * (1 - time) * Math.pow(time, 2) * (206) + Math.pow(time, 3) * 888\n        return timeSegment\n    }\n\n    private y(t: any, e: any, r: any, i: any, s: any, a: any) {\n        const n = t * i + e * s + r * a - s * i - a * t - r * e\n        return -.001 < n && n < .001\n    }\n\n    private createSizedArray(t: any) {\n        return Array.apply(null, {\n            length: t,\n        })\n    }\n    private animatePosition(sprite: PIXI.Sprite, data: any, totalFrame: number, duration: number) {\n        const animation: Array<{ bezier: any, ease: any, t: number, delay: number, lastFrame: boolean }> = []\n        if (data.k && data.k[0].i) {\n            let startPoint = { x: 0, y: 0 }\n            let endPoint = { x: 0, y: 0 }\n            let totalDelay = 0\n            if (data.k[0].t > 0) {\n                totalDelay += data.k[0].t / totalFrame\n            }\n            data.k.map((d: any, index: number) => {\n\n                // get ease string\n                let easeString = ''\n                if (data.k[index].i && data.k[index].o) {\n                    easeString = 'M0,0 C' + data.k[index].o.x + ',' + data.k[index].o.y + ' ' +\n                        data.k[index].i.x + ',' + data.k[index].i.y + ' 1,1'\n                }\n\n                if (data.k[index + 1]) {\n                    // get postion point\n                    const xValue = data.k[index + 1].s[0] - data.k[index].s[0]\n                    const yValue = data.k[index + 1].s[1] - data.k[index].s[1]\n                    if (index === 0) {\n                        startPoint = {\n                            x: sprite.x,\n                            y: sprite.y,\n                        }\n\n                        endPoint = {\n                            x: sprite.x + xValue,\n                            y: sprite.y + yValue,\n                        }\n\n                    } else {\n                        startPoint = endPoint\n                        endPoint = {\n                            x: startPoint.x + xValue,\n                            y: startPoint.y + yValue,\n                        }\n                    }\n                    // get bezier cruve control point\n                    const bezierPoints: Array<{ x: number, y: number }> = []\n                    bezierPoints.push(startPoint) // start point\n\n                    bezierPoints.push({\n                        x: startPoint.x + data.k[index].to[0],\n                        y: startPoint.y + data.k[index].to[1],\n                    }) // controll point\n                    bezierPoints.push({\n                        x: endPoint.x + data.k[index].ti[0],\n                        y: endPoint.y + data.k[index].ti[1],\n                    }) // controll point\n\n                    bezierPoints.push(endPoint) // end point\n\n                    animation.push({\n                        bezier: {\n                            type: 'cubic',\n                            values: bezierPoints,\n                        },\n                        ease: CustomEase.create(\"custom\", easeString),\n                        t: (data.k[index + 1].t - data.k[index].t) / totalFrame,\n                        delay: totalDelay * duration,\n                        lastFrame: (data.k[index + 1].t / totalFrame) === 1? true : false,\n                    })\n                } else {\n                    return\n                }\n            })\n        }\n        return animation\n    }\n\n    // currently ignore dimension z\n    private animationScale(sprite: PIXI.Sprite, data: any, totalFrame: number, duration: number) {\n        const animation: { x: any, y: any } = { x: null, y: null }\n        const animationX: Array<{ x: number, ease: any, t: number, delay: number, lastFrame: boolean }> = []\n        const animationY: Array<{ y: number, ease: any, t: number, delay: number, lastFrame: boolean }> = []\n        let easeStringX = ''\n        let easeStringY = ''\n        let totalDelay = 0\n        if (data.k[0].t > 0) {\n            totalDelay += data.k[0].t / totalFrame\n        }\n        if (data.k && data.k[0].i) {\n            data.k.map((d: any, index: number) => {\n\n                if (data.k[index].i && data.k[index].o) {\n                    easeStringX = 'M0,0 C' + data.k[index].o.x[0] + ',' + data.k[index].o.y[0] + ' ' +\n                        data.k[index].i.x[0] + ',' + data.k[index].i.y[0] + ' 1,1'\n\n                    easeStringY = 'M0,0 C' + data.k[index].o.x[1] + ',' + data.k[index].o.y[1] + ' ' +\n                        data.k[index].i.x[1] + ',' + data.k[index].i.y[1] + ' 1,1'\n                }\n\n                if (data.k[index + 1]) {\n                    animationX.push({\n                        x: data.k[index + 1].s[0] / 100,\n                        ease: CustomEase.create(\"custom\", easeStringX),\n                        t: (data.k[index + 1].t - data.k[index].t) / totalFrame,\n                        delay: totalDelay * duration,\n                        lastFrame: (data.k[index + 1].t / totalFrame) === 1? true : false,\n                    })\n                    animationY.push({\n                        y: data.k[index + 1].s[1] / 100,\n                        ease: CustomEase.create(\"custom\", easeStringY),\n                        t: (data.k[index + 1].t - data.k[index].t) / totalFrame,\n                        delay: totalDelay * duration,\n                        lastFrame: (data.k[index + 1].t / totalFrame) === 1? true : false,\n                    })\n                } else {\n                    return\n                }\n            })\n        }\n        animation.x = animationX\n        animation.y = animationY\n        return animation\n    }\n\n    private animationRotation(sprite: PIXI.Sprite, data: any, totalFrame: number, duration: number) {\n        const animation: Array<{ rotation: number, ease: any, t: number, delay: number,  lastFrame: boolean }> = []\n        let easeString = ''\n        let totalDelay = 0\n        if (data.k[0].t > 0) {\n            totalDelay += data.k[0].t / totalFrame\n        }\n        if (data.k && data.k[0].i) {\n            data.k.map((d: any, index: number) => {\n                if (data.k[index + 1]) {\n                    if (data.k[index].i && data.k[index].o) {\n                        easeString = 'M0,0 C' + data.k[index].o.x[0] + ',' + data.k[index].o.y[0] + ' ' +\n                            data.k[index].i.x[0] + ',' + data.k[index].i.y[0] + ' 1,1'\n                    }\n\n                    animation.push({\n                        rotation: (data.k[index + 1].s[0] - data.k[index].s[0]) * Math.PI / 180,\n                        ease: CustomEase.create(\"custom\", easeString),\n                        t: (data.k[index + 1].t - data.k[index].t) / totalFrame,\n                        delay: totalDelay * duration,\n                        lastFrame: (data.k[index + 1].t / totalFrame) === 1? true : false,\n                    })\n                } else {\n                    return\n                }\n            })\n        }\n        return animation\n    }\n\n    private animationOpacity(srpite: PIXI.Sprite, data: any, totalFrame: number, duration: number) {\n        const animation: Array<{ alpha: number, ease: any, t: number, delay: number, lastFrame: boolean }> = []\n        let easeString = ''\n        let totalDelay = 0\n        if (data.k[0].t > 0) {\n            totalDelay += data.k[0].t / totalFrame\n        }\n        if (data.k && data.k[0].i) {\n            data.k.map((d: any, index: number) => {\n                if (data.k[index + 1]) {\n                    if (data.k[index].i && data.k[index].o) {\n                        easeString = 'M0,0 C' + data.k[index].o.x[0] + ',' + data.k[index].o.y[0] + ' ' +\n                            data.k[index].i.x[0] + ',' + data.k[index].i.y[0] + ' 1,1'\n                    }\n\n                    animation.push({\n                        alpha: data.k[index + 1].s[0] / 100,\n                        ease: CustomEase.create(\"custom\", easeString),\n                        t: (data.k[index + 1].t - data.k[index].t) / totalFrame,\n                        delay: totalDelay * duration,\n                        lastFrame: (data.k[index].t / totalFrame) === 1? true : false,\n                    })\n                } else {\n                    return\n                }\n\n            })\n        }\n        return animation\n    }\n\n    private animationAnchor(sprite: PIXI.Sprite, data: any, totalFrame: number, duration: number) {\n        const animation: Array<{ bezier: any, ease: any, t: number, delay: number, lastFrame: boolean }> = []\n        if (data.k && data.k[0].i) {\n            let startPoint = [0, 0, 0]\n            let endPoint = [0, 0, 0]\n            let time = 0\n            let totalDelay = 0\n            if (data.k[0].t > 0) {\n                totalDelay += data.k[0].t / totalFrame\n            }\n            data.k.map((d: any, index: number) => {\n                // get ease string\n                let easeString = ''\n                if (data.k[index].i && data.k[index].o) {\n                    easeString = 'M0,0 C' + data.k[index].o.x + ',' + data.k[index].o.y + ' ' +\n                        data.k[index].i.x + ',' + data.k[index].i.y + ' 1,1'\n                }\n\n                if (data.k[index + 1]) {\n                    startPoint = [\n                        data.k[index].s[0],\n                        data.k[index].s[1],\n                        data.k[index].s[2],\n                    ]\n\n                    endPoint = [\n                        data.k[index + 1].s[0],\n                        data.k[index + 1].s[1],\n                        data.k[index + 1].s[2],\n                    ]\n                    time = (data.k[index + 1].t - data.k[index].t) / totalFrame,\n                        animation.push({\n                            bezier: this.buildPath(startPoint, endPoint, data.k[index].to, data.k[index].ti, time * duration * 60),\n                            ease: CustomEase.create(\"custom\", easeString),\n                            t: time,\n                            delay: totalDelay * duration,\n                            lastFrame: (data.k[index + 1].t / totalFrame) === 1? true : false,\n                        })\n                } else {\n                    return\n                }\n\n            })\n        }\n        return animation\n    }\n\n    private triggerReisteredCallback() {\n        if(this.loadedCb) this.loadedCb()\n\n        if(this.completeCb) this.completeCb()\n     \n        if(this.reverseCompleteCb) this.reverseCompleteCb()\n    }\n    \n    public play() {\n        for (let property in this.aniController) {\n            if (this.aniController.hasOwnProperty(property) && this.aniController[property] !== null) {\n                this.aniController[property].play()\n            }\n        }\n    }   \n\n    public stop() {\n        for (let property in this.aniController) {\n            if (this.aniController.hasOwnProperty(property) && this.aniController[property] !== null) {\n                this.aniController[property].pause()\n            }\n        }\n    }   \n\n    public reverse() {\n        for (let property in this.aniController) {\n            if (this.aniController.hasOwnProperty(property) && this.aniController[property] !== null) {\n                this.aniController[property].reverse()\n            }\n        }\n    }  \n\n    public setPosition(pos: any) {\n        this.aniController.position = pos\n    }\n    public setPositionData(pos: any) {\n        this.aniData.position = pos\n    }\n    \n    public setScaleX(scaleX: any) {\n        this.aniController.scaleX = scaleX\n    }\n    public setScaleXData(scaleX: any) {\n        this.aniData.scaleX = scaleX\n    }    \n\n    public setScaleY(scaleY: any) {\n        this.aniController.scaleY = scaleY\n    }\n    public setScaleYData(scaleY: any) {\n        this.aniData.scaleY = scaleY\n    } \n\n    public setRotation(rotation: any) {\n        this.aniController.rotation = rotation\n    }\n    public setRotationData(rotation: any) {\n        this.aniData.rotation = rotation\n    }\n\n    public setOpacity(opacity: any) {\n        this.aniController.opacity = opacity\n    }\n    public setOpacityData(opacity: any) {\n        this.aniData.opacity = opacity\n    }    \n\n    public setAnchor(anchor: any) {\n        this.aniController.anchor = anchor\n    }\n    public setAnchorData(anchor: any) {\n        this.aniData.anchor = anchor\n    }    \n\n    public setLastFrameTimeline() {\n        for (let property in this.aniData) {\n            if (this.aniData.hasOwnProperty(property) && this.aniData[property] !== null) {\n                for(let data of this.aniData[property]  )  {   \n                    if(data.lastFrame) {\n                        this.lastTimeLine = this.aniController[property]\n                         return\n                    }\n                }\n            }\n        }\n    }\n\n    public on(status: string, callback:() => void) {\n        if( this.lastTimeLine === null ) {\n            switch(status) {\n                case 'loadComplete':\n                    this.loadedCb = callback\n                case 'complete':\n                    this.completeCb = () => { this.lastTimeLine.eventCallback('onComplete', () => callback()) }\n                    break\n                case 'reverseComplete':  \n                    this.reverseCompleteCb = () => { this.lastTimeLine.eventCallback('onReverseComplete', () => callback()) }\n                    break\n            }\n        } else {\n            switch(status) {\n                case 'complete':\n                    this.lastTimeLine.eventCallback('onComplete', () => callback())\n                    break\n                case 'reverseComplete':  \n                    this.lastTimeLine.eventCallback('onReverseComplete', () => callback())\n                    break\n            }\n        }\n    }\n}\n\nexport function LoadAnimation(target: PIXI.Sprite, JSON: any) {\n    return new AniController(target, JSON)\n}","import { animate as _animate } from './animate'\nimport { AnimateOptions } from '../types'\nimport * as animations from './animations'\n\nexport const queryAnimate = {\n    animate(options: AnimateOptions) {\n        for (let i = 0; i < this.length; i++) {\n            _animate(this[i], options)\n        }\n    },\n}\n\nconst keys = Object.keys(animations)\nconst values = Object.values(animations)\nkeys.map((animation, index) => {\n    queryAnimate[animation] = function (...args: any) {\n        for (let i = 0; i < this.length; i++) {\n            // @ts-ignore\n            values[index](this[i], ...args)\n        }\n    }\n})\n\n// @ts-ignore\nif (window.query) window.query.extend(queryAnimate)"],"names":["PixiPlugin","_animate"],"mappings":"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"}